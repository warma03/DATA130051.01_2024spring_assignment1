def load_data():
    base_url = 'https://github.com/zalandoresearch/fashion-mnist/raw/master/data/fashion/'
    files = ['train-images-idx3-ubyte.gz', 'train-labels-idx1-ubyte.gz',
             't10k-images-idx3-ubyte.gz', 't10k-labels-idx1-ubyte.gz']

    def download_file(file_name):
        file_path = file_name
        if not os.path.exists(file_path):
            print('Downloading', file_name)
            url = base_url + file_name
            os.system('wget ' + url)

    for file in files:
        download_file(file)

    with gzip.open('train-images-idx3-ubyte.gz', 'rb') as f:
        train_images = np.frombuffer(f.read(), np.uint8, offset=16).reshape(-1, 784)

    with gzip.open('train-labels-idx1-ubyte.gz', 'rb') as f:
        train_labels = np.frombuffer(f.read(), np.uint8, offset=8)

    with gzip.open('t10k-images-idx3-ubyte.gz', 'rb') as f:
        test_images = np.frombuffer(f.read(), np.uint8, offset=16).reshape(-1, 784)

    with gzip.open('t10k-labels-idx1-ubyte.gz', 'rb') as f:
        test_labels = np.frombuffer(f.read(), np.uint8, offset=8)

    split_ratio = 0.8
    split_index = int(len(train_images) * split_ratio)
    val_images, val_labels = train_images[split_index:], train_labels[split_index:]
    train_images, train_labels = train_images[:split_index], train_labels[:split_index]

    return train_images, train_labels, val_images, val_labels, test_images, test_labels

def preprocess_data(train_images, train_labels, val_images, val_labels, test_images, test_labels):
    train_images = train_images / 255.0
    val_images = val_images / 255.0
    test_images = test_images / 255.0

    num_classes = 10
    train_labels = np.eye(num_classes)[train_labels]
    val_labels = np.eye(num_classes)[val_labels]
    test_labels = np.eye(num_classes)[test_labels]

    return train_images, train_labels, val_images, val_labels, test_images, test_labels
